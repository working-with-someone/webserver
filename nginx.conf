
# worker processe count를 제한한다.
# available cpu core, hard disk driver, load pattern 등에 따라 최적화될 수 있다.
#! develop 단계로 nginx의 autodetection 에 의존한다
worker_processes auto;

events {
    # 하나의 worker process는 동시에 1024개의 client connection을 유지할 수 있다.
    #! develop단계로 optimizing된 값이 아니다.
    worker_connections 1024;
}

http {
    default_type application/octet-stream;

    # 2m 이하의 file은 buffer를 사용하지 않고 sendfile() system call로 file 전체를 transmit한다.
    # 2m 초과의 file은 2m의 chunked data로 transmit한다.
    sendfile on;
    sendfile_max_chunk 2m;

    #
    keepalive_timeout 65;


    include mime.types;


    server {
        listen 80;
        server_name dev.wws.com
        root html;

        location / {
            return 301 https://dev.wws.com;
        }
    }

    #for developer server
    server {
        listen 443 ssl;
        server_name dev.wws.com;

        ssl_certificate ssl/dev.wws.cert.pem;
        ssl_certificate_key ssl/dev.wws.key.pem;

        location / {
            proxy_pass http://localhost:5173;
        }
    }

    server {
        listen 80;
        server_name auth.wws.com

        root html;
        location / {
            return 301 https://auth.wws.com;
        }
    }

    #authentication server
    server {
        listen 443 ssl;
        server_name auth.wws.com;

        ssl_certificate ssl/auth.wws.cert.pem;
        ssl_certificate_key ssl/auth.wws.key.pem;


        location / {
            proxy_pass http://localhost:8000;
        }
    }
}